% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/pythonInterface.R
\docType{class}
\name{PythonInterface-class}
\alias{PythonInterface}
\alias{PythonInterface-class}
\title{An Interface to Python}
\description{
The PythonInterface class provides an evaluator for computations in Python, following the structure
in the XR  package.  Proxy functions and classes allow use of the interface with no explicit
reference to the evaluator.  The function \code{RPython()} returns an evaluator object.
}
\section{Methods}{

\describe{
\item{\code{Define(text, file)}}{Define a Python function from a character vector, `text` or by reading the text
from a file via readLines().  Character vectors are taken to represent lines of Python code
in a function definiition.  The method returns a proxy function with a name inferred from
the first line of the text.}

\item{\code{Import(module, ...)}}{Import the module.  The "Interface" method assumes a command "import" in the server
language and does not handle any extra arguments (e.g., for importing specific members).}

\item{\code{PythonCommand(strings)}}{A low-level command execution, needed for initializing.  Normally should not be used by applications
since it does no error checking; use $Command() instead.}

\item{\code{ServerClassDef(Class, module, ...)}}{Individual interface packages will define this to return a named list or other object such that value$fields and value$methods are the server fields and methods, character vectors
of names or named objects whose elements give further information.  This default version
returns NULL, indicating that no metadata is available.}

\item{\code{ServerEval(expr, key, get)}}{Must be defined by the server language interface: evaluates `expr`(a text string).
If `key` is an empty string, `expr` is treated as a directive, with no defined value.
Otherwise, `key` is a non-empty string, and the server
object should be assigned with this name. The value returned is the R result, which may
be an AssignedProxy() object. If `get` is TRUE or the value judged simple enough,
it will be converted to an ordinary R object instead.}

\item{\code{ServerFunctionDef(name, module = "", ...)}}{The XR method defines the proxy function with no special metadata information.
Server langugae metadata may be used by a method that overrides this one, and calls it.}

\item{\code{ServerRemove(key)}}{Should be defined by the server language interface:
    The reference previously created for `key` should be removed.
What happens has no effect on the client side; the intent is to potentially recover memory.}

\item{\code{ServerSerialize(key, file)}}{Serialize the proxy function corresponding to `key` to the specified `file`.
Will normally be defined using the serialization supported by the particular server
language. The default gets the object and serializes in R, so only works if conversion does}

\item{\code{ServerUnserialize(file, all)}}{Unserialize the file, returning a proxy object for a list, or equivalent in the server
language, of all the objects serialized to this file.  Because open connections can not
generally be shared among languages, must unserialize the entire file.}

\item{\code{Shell(endCode = "quit", prompt = ">>>: ", cont = "+++: ")}}{Starts an interactive shell.  Each line of input must be a complete expression
or statement in the server language. To continue over multiple lines, append an unescaped
backslash to all but the last line.}

\item{\code{Source(filename)}}{Parse and evaluate the contents of the file.  This method is likely to be overriden for particular langauges
with a directive to include the contents of the file.  The `XR` version reads the file and processes the entire contents
as a single string, newlines inserted between lines of the file.}
}}

